name: CI

on:
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/setup-node@v2
      - name: Install Dependencies
        working-directory: ./app
        run: yarn
      - name: Run linting
        working-directory: ./app
        run: yarn run lint
      - name: Run unit tests
        working-directory: ./app
        env:
          CI: true
        run: yarn run test
      - name: Login to Heroku Container registry
        if: github.ref == 'refs/heads/master'
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: Build and push
        if: github.ref == 'refs/heads/master'
        working-directory: ./app
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web
      - name: Release
        if: github.ref == 'refs/heads/master'
        working-directory: ./app
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
  visual_regression:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    container:
      image: backstopjs/backstopjs
      env:
        URL: https://lace-up-sjoe-staging.herokuapp.com/
    steps:
      - name: Checking out our code
        uses: actions/checkout@master
      - name: Visual Regression Tests
        run: backstop test --config backstop/config/backstop--ci.js
      - name: Move test results to tmp
        if: always()
        working-directory: backstop
        run: |
          mkdir tmp
          mv -t tmp html_report results reference
      - name: Archive Visual Regression Tests
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: visual-regression-tests
          path: |
            backstop/tmp
  deploy_prod:
    needs: visual_regression
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: Pull image
        working-directory: ./app
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: docker pull registry.heroku.com/lace-up-sjoe-staging/web
      - name: Retag image
        working-directory: ./app
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: docker tag registry.heroku.com/lace-up-sjoe-staging/web registry.heroku.com/lace-up-sjoe-prod/web
      - name: Push to prod docker registry
        working-directory: ./app
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: docker push registry.heroku.com/lace-up-sjoe-prod/web
      - name: Release to production
        working-directory: ./app
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME_PROD }} web